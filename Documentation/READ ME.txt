For testing purposes the username and password of the superuser was made easy, although should always meet password requirements when implementing a system into
the industry. 
	superuser: Username:admin, PASSWORD:admin
	Password for the other test users is PASSWORD:Username21

To start the webserver, run the following command from within the "John Hofbauer CMPSC431W Project Part-2\env\CMPSC431W_Bookstore"
: python manage.py runserver

The required libraries to run the web server is Django, re, Strings

The HTML pages are stored in: "John Hofbauer CMPSC 431W Project Part-2\env\CMPSC431W_Bookstore\bookstore\templates"
The Views code is stored in: "John Hofbauer CMPSC431W Project Part-2\env\CMPSC431W_Bookstore\bookstore"
The Models code is stored in: "John Hofbauer CMPSC431W Project Part-2\env\CMPSC431W_Bookstore\bookstore"



This project presented many difficulties, 
 1) using django queries are SQL equivalents but still required a great deal of interpretation when designing long queries. 
	The tables returned from the quirese were the hardest to interpret, since parsing and updating records are only allould on some queries. 
	This is a result of how Django stores the tables and makes some tables from the 'get' and 'post' methods Mutable. and other QuerySet not. 
 2) restricting the User from going to unauthorized pages and preventing unauthorized code from running on the system. 
	This can be done by using only Django QuerySet but in some cases, certain pages like the admin and csv-upload needed extra restrictions.
 3) The Html, was easy to write since the documentation was not very descriptive, however when posting tables within the website with python using 'builtins' is used 
	That was not well documented online. The documentation does not give extensive examples and is just bullet points. https://docs.djangoproject.com/en/3.2/ref/templates/builtins/
	The css. for the web pages, is from a template SOURCE: w3schools.com 
 4) The Book of the code is written in the views.py, file under the bookstore folder. This is where the queries are created and stored. and the table creation
	code is in the models.py 
	All other files were minimally touched or auto generated by Django.

If i were to do this again, I would have started with creating forms and sending data to the server faster. Since I now understand
the quere sets that the data is stored in along with them not being maluable. 

